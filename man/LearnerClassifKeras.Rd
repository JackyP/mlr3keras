% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Learner_Keras.R
\docType{data}
\name{LearnerClassifKeras}
\alias{LearnerClassifKeras}
\alias{mlr_learners_classif.keras}
\title{Keras Neural Network with custom architecture}
\format{\code{\link[R6:R6Class]{R6::R6Class()}} inheriting from \link[mlr3:LearnerClassif]{mlr3::LearnerClassif}.}
\description{
Neural Network using Keras and Tensorflow.
This learner allows for supplying a custom architecture.
Calls \link[keras:fit]{keras::fit} from package \CRANpkg{keras}.

Parameters:\cr
Most of the parameters can be obtained from the \code{keras} documentation.
Some exceptions are documented here.
\itemize{
\item \code{model}: A compiled keras model.
\item \code{class_weights}: needs to be a named list of class-weights
for the dierent classes numbered from 0 to c-1 (for c classes).\preformatted{Example:
wts = c(0.5, 1)
setNames(as.list(wts), seq_len(length(wts)) - 1)
}
\item \code{callbacks}: A list of keras callbacks.
See \code{?callbacks}.
}
}
\section{Construction}{
\preformatted{LearnerClassifKeras$new()
mlr3::mlr_learners$get("classif.keras")
mlr3::lrn("classif.keras")
}
}

\examples{
 # Define a model
 library(keras)
 model = keras_model_sequential() \%>\%
 layer_dense(units = 12L, input_shape = 4L, activation = "relu") \%>\%
 layer_dense(units = 12L, activation = "relu") \%>\%
 layer_dense(units = 3L, activation = "softmax") \%>\%
   compile(optimizer = optimizer_sgd(),
     loss = "categorical_crossentropy",
     metrics = "accuracy")
 # Create the learner
 learner = LearnerClassifKeras$new()
 learner$param_set$values$model = model
 learner$train(mlr3::mlr_tasks$get("iris"))
}
\seealso{
\link[mlr3misc:Dictionary]{Dictionary} of \link[mlr3:Learner]{Learners}: \link[mlr3:mlr_learners]{mlr3::mlr_learners}
}
\keyword{datasets}
